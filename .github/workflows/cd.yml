name: Continuous Delivery

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch

jobs:
  tags:
    runs-on: ubuntu-latest
    outputs:
        new_tag: ${{ steps.newtag.outputs.tag }}
    steps:
      # - uses: webfactory/ssh-agent@v0.5.4
      #   with:
      #     ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Check repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: main
          token: ${{ secrets.PAT_PUSH_TAG_ACTIONGITHUB }}
      - name: Setup Git
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
      - name: Determine new tag
        id: newtag
        run: |
          git fetch --tags
          LAST_TAG=$(git tag | sort -V | tail -n1)
          echo "Dernier tag trouvé: $LAST_TAG"
          # Sépare le tag en numéros et retire le 'v' initial
          TAG_NUMBER=${LAST_TAG//v/}
          IFS='.' read -r MAJ MIN PATCH <<< "$TAG_NUMBER"
          # Incrémente le dernier numéro (patch version)
          PATCH=$((PATCH + 1))
          NEW_TAG="v$MAJ.$MIN.$PATCH"
          echo "Nouveau tag: $NEW_TAG"
          echo "::set-output name=tag::$NEW_TAG"
  
      - name: Create and Push Tag
        run: |
          NEW_TAG=${{ steps.newtag.outputs.tag }}
          git tag -a "$NEW_TAG" -m "Incremented tag to $NEW_TAG"
          git push https://${{ secrets.PAT_PUSH_TAG_ACTIONGITHUB }}@github.com/oussZemzami/lol-tracker-frontend.git --tags
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Build the Docker image
    - name: Build Docker Image
      run: docker build . --file Dockerfile --tag oussamazemzami/lol-tracker-frontend:${{ needs.tags.outputs.new_tag }}

    # Push the Docker image to Docker Hub
    - name: Push Docker Image
      run: docker push oussamazemzami/lol-tracker-frontend:${{ needs.tags.outputs.new_tag }}

    # Step 4: Authenticate with Portainer and deploy the new image
    - name: Clone deployment repo
      run: git clone git@github.com:oussZemzami/lol-tracker-deploy.git ./deploy-repo

    - name: Update Docker Compose file
      run: |
        sed -i "s|oussamazemzami/lol-tracker-frontend:v[0-9]*\.[0-9]*\.[0-9]*|oussamazemzami/lol-tracker-frontend:${{ needs.tags.outputs.new_tag }}|" ./deploy-repo/docker-compose.yaml

    - name: Commit and Push changes
      run: |
        cd ./deploy-repo
        git config user.name "GitHub Action"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add docker-compose.yaml
        git commit -m "Update frontend image version to ${{ needs.tags.outputs.new_tag }}"
        git push
